#!/usr/bin/env node

const { defaultEM, defaultEX, defaultWidth, defaultPackages, initTex2Svg } = require('../lib/tex2svg.js')

//
//  Get the command-line arguments
//
var argv = require('yargs')
    .demand(0).strict()
    .usage('$0 [options]: convert stdin math formula to stdout svg')
    .options({
        inline: {
            type: 'boolean',
            default: true,
            describe: "process as inline math"
        },
        em: {
            type: 'number',
            default: defaultEM,
            describe: 'em-size in pixels'
        },
        ex: {
            type: 'number',
            default: defaultEX,
            describe: 'ex-size in pixels'
        },
        width: {
            type: 'number',
            default: defaultWidth,
            describe: 'width of container in pixels'
        },
        container: {
            type: 'boolean',
            describe: 'include <mjx-container> element'
        },
        packages: {
            default: defaultPackages,
            describe: 'the packages to use, e.g. "base, ams"; use "*" to represent the default packages, e.g, "*, bbox"'
        },
        fontCache: {
            type: 'boolean',
            default: true,
            describe: 'whether to use a local font cache or not'
        }
    })
    .argv;

require('get-stream')(process.stdin).then(async (input) => {

  const tex2svg = await initTex2Svg({
    packages: argv.packages,
    fontCache: argv.fontCache,
  })

  console.log(tex2svg(input, {
    inline: argv.inline,
    em: argv.em,
    ex: argv.ex,
    width: argv.width,
    container: argv.container
  }))
})
